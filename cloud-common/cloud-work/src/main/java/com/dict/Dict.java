package com.dict;

import com.cloud.common.util.db.bo.ColumnEntity;
import com.cloud.common.util.db.bo.TableEntity;
import com.cloud.common.util.db.connection.DbComponent;
import com.cloud.common.util.db.connection.PostgreSQLDb;

import java.util.*;
import java.util.stream.Collectors;

/**
 * @author liulei
 */
public class Dict {

    public static void main(String[] args) {


        //受理中心
//        String db = "accept_test";
//        DbComponent dbComponent = PostgreSQLDb.createDb("192.168.10.67", "5432",
//                "tq_scgrid_accept_center", db, "accept_test", "accept_test@123");
        //异常字段：------------->appeal_source    -       highest_level,back_level,last_level,
        //异常字段：------------->accept_appeal_source    -       last_level,


        //事件
//        String db = "public";
//        DbComponent dbComponent = PostgreSQLDb.createDb("192.168.10.67", "5432",
//                "postgres", db, "postgres", "Tianquekeji@123");
        //异常字段：------------->sg_com_pub_edu      -     activity_type,
        //异常字段：------------->sg_et_tag_relation  -  target_org_level,target_function_org_type,target_org_type,
        //异常字段：------------->sg_et_issue_step    -     target_org_level,target_org_type,

        //微信管理
//        String db = "wechat_test";
//        DbComponent dbComponent = PostgreSQLDb.createDb("192.168.10.67", "5432",
//                "tq_scgrid_wechat", db, "wechat_test", "wechat_test@123");

        //基础服务
//        String db = "common_biz_test";
//        DbComponent dbComponent = PostgreSQLDb.createDb("192.168.10.67", "5432",
//                "tq_scgrid_common_biz", db, "common_biz_test", "common_biz_test@123");
        //异常字段：------------->sg_nsl_clue    -       channel_source,
        //异常字段：------------->sg_excel_task    -       task_status,task_type,
        //异常字段 占时未发现使用：------------->statistics_edu    -       org_type,org_level,


        //open Api  -----------------------------------
//        String db = "medical_test";
//        DbComponent dbComponent = PostgreSQLDb.createDb("192.168.10.67", "5432",
//                "tq_scgrid_medical", db, "postgres", "Tianquekeji@123");
        //异常字段：------------->sg_medicare_insured_person    -       gender,nation,
        //异常字段：------------->sg_medicare_assist_task_finding    -       practical_type,
        //异常字段：------------->sg_medicare_insured_people    -       person_type,person_category,payment_grade,

//        String db = "data_claim_test";
//        DbComponent dbComponent = PostgreSQLDb.createDb("192.168.10.67", "5432",
//                "tq_scgrid_claim", db, "data_claim_test", "data_claim_test");
        //异常字段：------------->sg_pop_soldier    -       soldier_disability_level,follow_level,soldier_merit_level,

//        String db = "court_test";
//        DbComponent dbComponent = PostgreSQLDb.createDb("192.168.10.67", "5432",
//                "tq_scgrid_court", db, "postgres", "Tianquekeji@123");


        String db = "claim_test";
        DbComponent dbComponent = PostgreSQLDb.createDb("192.168.10.67", "5432",
                "tq_scgrid_claim", db, "data_claim_test", "data_claim_test");


        List<Long> dis = Arrays.asList(90720007L, 90720006L, 90720005L, 90720004L, 90720003L, 90720002L, 90720001L, 90710002L, 90710001L, 90700007L, 90700006L, 90700005L, 90700004L, 90700003L, 90700002L, 90700001L, 90690003L, 90690002L, 90690001L, 90680007L, 90680006L, 90680005L, 90680004L, 90680003L, 90680002L, 90680001L, 90670006L, 90670005L, 90670004L, 90670003L, 90670002L, 90670001L, 90660006L, 90660005L, 90660004L, 90660003L, 90660002L, 90660001L, 90650005L, 90650004L, 90650003L, 90650002L, 90650001L, 90640006L, 90640005L, 90640004L, 90640003L, 90640002L, 90640001L, 90630003L, 90630002L, 90630001L, 90620004L, 90620003L, 90620002L, 90620001L, 90610004L, 90610003L, 90610002L, 90610001L, 90600002L, 90600001L, 90590009L, 90590008L, 90590007L, 90590006L, 90590005L, 90590004L, 90590003L, 90590002L, 90590001L, 90580003L, 90580002L, 90580001L, 90570008L, 90570007L, 90570006L, 90570005L, 90570004L, 90570003L, 90570002L, 90570001L, 90560007L, 90560006L, 90560005L, 90560004L, 90560003L, 90560002L, 90560001L, 90550002L, 90550001L, 90540005L, 90540004L, 90540003L, 90540002L, 90540001L, 90530006L, 90530005L, 90530004L, 90530003L, 90530002L, 90530001L, 90520005L, 90520004L, 90520003L, 90520002L, 90520001L, 90510004L, 90510003L, 90510002L, 90510001L, 90500005L, 90500004L, 90500003L, 90500002L, 90500001L, 90490003L, 90490002L, 90490001L, 90480011L, 90480010L, 90480009L, 90480008L, 90480007L, 90480006L, 90480005L, 90480004L, 90480003L, 90480002L, 90480001L, 90470008L, 90470007L, 90470006L, 90470005L, 90470004L, 90470003L, 90470002L, 90470001L, 90460009L, 90460008L, 90460007L, 90460006L, 90460005L, 90460004L, 90460003L, 90460002L, 90460001L, 90450008L, 90450007L, 90450006L, 90450005L, 90450004L, 90450003L, 90450002L, 90450001L, 90440004L, 90440003L, 90440002L, 90440001L, 90430003L, 90430002L, 90430001L, 90420007L, 90420006L, 90420005L, 90420004L, 90420003L, 90420002L, 90420001L, 90410009L, 90410008L, 90410007L, 90410006L, 90410005L, 90410004L, 90410003L, 90410002L, 90410001L, 90400015L, 90400014L, 90400013L, 90400012L, 90400011L, 90400010L, 90400009L, 90400008L, 90400007L, 90400006L, 90400005L, 90400004L, 90400003L, 90400002L, 90400001L, 90390006L, 90390005L, 90390004L, 90390003L, 90390002L, 90390001L, 90380015L, 90380014L, 90380013L, 90380012L, 90380011L, 90380010L, 90380009L, 90380008L, 90380007L, 90380006L, 90380005L, 90380004L, 90380003L, 90380002L, 90380001L, 90370013L, 90370012L, 90370011L, 90370010L, 90370009L, 90370008L, 90370007L, 90370006L, 90370005L, 90370004L, 90370003L, 90370002L, 90370001L, 90360005L, 90360004L, 90360003L, 90360002L, 90360001L, 90350003L, 90350002L, 90350001L, 90340008L, 90340007L, 90340006L, 90340005L, 90340004L, 90340003L, 90340002L, 90340001L, 90330003L, 90330002L, 90330001L, 90320011L, 90320010L, 90320009L, 90320008L, 90320007L, 90320006L, 90320005L, 90320004L, 90320003L, 90320002L, 90320001L, 90310019L, 90310018L, 90310017L, 90310016L, 90310015L, 90310014L, 90310013L, 90310012L, 90310011L, 90310010L, 90310009L, 90310008L, 90310007L, 90310006L, 90310005L, 90310004L, 90310003L, 90310002L, 90310001L, 90300009L, 90300008L, 90300007L, 90300006L, 90300005L, 90300004L, 90300003L, 90300002L, 90300001L, 90290007L, 90290006L, 90290005L, 90290004L, 90290003L, 90290002L, 90290001L, 90280012L, 90280011L, 90280010L, 90280009L, 90280008L, 90280007L, 90280006L, 90280005L, 90280004L, 90280003L, 90280002L, 90280001L, 90270005L, 90270004L, 90270003L, 90270002L, 90270001L, 90260012L, 90260011L, 90260010L, 90260009L, 90260008L, 90260007L, 90260006L, 90260005L, 90260004L, 90260003L, 90260002L, 90260001L, 90250007L, 90250006L, 90250005L, 90250004L, 90250003L, 90250002L, 90250001L, 90240009L, 90240008L, 90240007L, 90240006L, 90240005L, 90240004L, 90240003L, 90240002L, 90240001L, 90230015L, 90230014L, 90230013L, 90230012L, 90230011L, 90230010L, 90230009L, 90230008L, 90230007L, 90230006L, 90230005L, 90230004L, 90230003L, 90230002L, 90230001L, 90220006L, 90220005L, 90220004L, 90220003L, 90220002L, 90220001L, 90210061L, 90210060L, 90210059L, 90210058L, 90210057L, 90210056L, 90210055L, 90210054L, 90210053L, 90210052L, 90210051L, 90210050L, 90210049L, 90210048L, 90210047L, 90210046L, 90210045L, 90210044L, 90210043L, 90210042L, 90210041L, 90210040L, 90210039L, 90210038L, 90210037L, 90210036L, 90210035L, 90210034L, 90210033L, 90210032L, 90210031L, 90210030L, 90210029L, 90210028L, 90210027L, 90210026L, 90210025L, 90210024L, 90210023L, 90210022L, 90210021L, 90210020L, 90210019L, 90210018L, 90210017L, 90210016L, 90210015L, 90210014L, 90210013L, 90210012L, 90210011L, 90210010L, 90210009L, 90210008L, 90210007L, 90210006L, 90210005L, 90210004L, 90210003L, 90210002L, 90210001L, 90200003L, 90200002L, 90200001L, 90190087L, 90190086L, 90190085L, 90190084L, 90190083L, 90190082L, 90190081L, 90190080L, 90190079L, 90190078L, 90190077L, 90190076L, 90190075L, 90190074L, 90190073L, 90190072L, 90190071L, 90190070L, 90190069L, 90190068L, 90190067L, 90190066L, 90190065L, 90190064L, 90190063L, 90190062L, 90190061L, 90190060L, 90190059L, 90190058L, 90190057L, 90190056L, 90190055L, 90190054L, 90190053L, 90190052L, 90190051L, 90190050L, 90190049L, 90190048L, 90190047L, 90190046L, 90190045L, 90190044L, 90190043L, 90190042L, 90190041L, 90190040L, 90190039L, 90190038L, 90190037L, 90190036L, 90190035L, 90190034L, 90190033L, 90190032L, 90190031L, 90190030L, 90190029L, 90190028L, 90190027L, 90190026L, 90190025L, 90190024L, 90190023L, 90190022L, 90190021L, 90190020L, 90190019L, 90190018L, 90190017L, 90190016L, 90190015L, 90190014L, 90190013L, 90190012L, 90190011L, 90190010L, 90190009L, 90190008L, 90190007L, 90190006L, 90190005L, 90190004L, 90190003L, 90190002L, 90190001L, 90180006L, 90180004L, 90180003L, 90180002L, 90180001L, 90170008L, 90170007L, 90170006L, 90170005L, 90170004L, 90170003L, 90170002L, 90170001L, 90160007L, 90160006L, 90160005L, 90160004L, 90160003L, 90160002L, 90160001L, 90150002L, 90150001L, 90140003L, 90140002L, 90140001L, 90130002L, 90130001L, 90120005L, 90120004L, 90120003L, 90120002L, 90120001L, 90110002L, 90110001L, 90100001L, 90090003L, 90090002L, 90090001L, 90020006L, 90020005L, 90020004L, 90020003L, 90020002L, 90020001L, 90010002L, 90010001L, 70010004L, 70010003L, 70010002L, 70010001L, 20090002L, 20090001L, 20080001L, 10020003L, 10020002L, 10020001L, 10010003L, 10010002L, 10010001L, 10000004L, 10000003L, 10000002L, 10000001L, 9214005L, 9214004L, 9214003L, 9214002L, 9214001L, 9213004L, 9213003L, 9213002L, 9213001L, 9212004L, 9212003L, 9212002L, 9212001L, 9211004L, 9211003L, 9211002L, 9211001L, 9210006L, 9210005L, 9210004L, 9210003L, 9210002L, 9210001L, 9169003L, 9169002L, 9169001L, 9168002L, 9168001L, 9167005L, 9167004L, 9167003L, 9167002L, 9167001L, 9166005L, 9166004L, 9166003L, 9166002L, 9166001L, 9165004L, 9165003L, 9165002L, 9165001L, 9164005L, 9164004L, 9164003L, 9164002L, 9164001L, 9163009L, 9163008L, 9163007L, 9163006L, 9163005L, 9163004L, 9163003L, 9163002L, 9163001L, 9162004L, 9162003L, 9162002L, 9162001L, 9161003L, 9161002L, 9161001L, 9160004L, 9160003L, 9160002L, 9160001L, 9159010L, 9159009L, 9159008L, 9159007L, 9159006L, 9159005L, 9159004L, 9159003L, 9159002L, 9159001L, 9158006L, 9158005L, 9158004L, 9158003L, 9158002L, 9158001L, 9157006L, 9157005L, 9157004L, 9157003L, 9157002L, 9157001L, 9156037L, 9156036L, 9156035L, 9156034L, 9156033L, 9156032L, 9156031L, 9156030L, 9156029L, 9156028L, 9156027L, 9156026L, 9156025L, 9156024L, 9156023L, 9156022L, 9156021L, 9156020L, 9156019L, 9156018L, 9156017L, 9156016L, 9156015L, 9156014L, 9156013L, 9156012L, 9156011L, 9156010L, 9156009L, 9156008L, 9156007L, 9156006L, 9156005L, 9156004L, 9156003L, 9156002L, 9156001L, 9155003L, 9155002L, 9155001L, 9150020L, 9150019L, 9150018L, 9150017L, 9150016L, 9150015L, 9150014L, 9150013L, 9150012L, 9150011L, 9150010L, 9150009L, 9150008L, 9150007L, 9150006L, 9150005L, 9150004L, 9150003L, 9150002L, 9150001L, 9148006L, 9148005L, 9148004L, 9148003L, 9148002L, 9148001L, 9147007L, 9147006L, 9147005L, 9147004L, 9147003L, 9147002L, 9147001L, 9146004L, 9146003L, 9146002L, 9146001L, 9145003L, 9145002L, 9145001L, 9144004L, 9144003L, 9144002L, 9144001L, 9143003L, 9143002L, 9143001L, 9142004L, 9142003L, 9142002L, 9142001L, 9141003L, 9141002L, 9141001L, 9140003L, 9140002L, 9140001L, 9139003L, 9139002L, 9139001L, 9138003L, 9138002L, 9138001L, 9137003L, 9137002L, 9137001L, 9135005L, 9135004L, 9135003L, 9135002L, 9135001L, 9134003L, 9134002L, 9134001L, 9132009L, 9132008L, 9132007L, 9132006L, 9132005L, 9132004L, 9132003L, 9132002L, 9132001L, 9131004L, 9131003L, 9131002L, 9131001L, 9130004L, 9130003L, 9130002L, 9130001L, 9129003L, 9129002L, 9129001L, 9128005L, 9128004L, 9128003L, 9128002L, 9128001L, 9127005L, 9127004L, 9127003L, 9127002L, 9127001L, 9126005L, 9126004L, 9126003L, 9126002L, 9126001L, 9125005L, 9125004L, 9125003L, 9125002L, 9125001L, 9124001L, 9123001L, 9122001L, 9121001L, 9120006L, 9120005L, 9120004L, 9120003L, 9120002L, 9120001L, 9110002L, 9110001L, 9104005L, 9104004L, 9104003L, 9104002L, 9104001L, 9103002L, 9103001L, 9102002L, 9102001L, 9101004L, 9101003L, 9101002L, 9101001L, 9100011L, 9100010L, 9100009L, 9100008L, 9100007L, 9100006L, 9100005L, 9100004L, 9100003L, 9100002L, 9100001L, 9083021L, 9083020L, 9083019L, 9083018L, 9083017L, 9083016L, 9083015L, 9083014L, 9083013L, 9083012L, 9083011L, 9083010L, 9083009L, 9083008L, 9083007L, 9083006L, 9083005L, 9083004L, 9083003L, 9083002L, 9083001L, 9082008L, 9082007L, 9082006L, 9082005L, 9082004L, 9082003L, 9082002L, 9082001L, 9081011L, 9081010L, 9081009L, 9081008L, 9081007L, 9081006L, 9081005L, 9081004L, 9081003L, 9081002L, 9081001L, 9080003L, 9080002L, 9080001L, 9078004L, 9078003L, 9078002L, 9078001L, 9077015L, 9077014L, 9077013L, 9077012L, 9077011L, 9077010L, 9077009L, 9077008L, 9077007L, 9077006L, 9077005L, 9077004L, 9077003L, 9077002L, 9077001L, 9075006L, 9075005L, 9075004L, 9075003L, 9075002L, 9075001L, 9074004L, 9074003L, 9074002L, 9074001L, 9073012L, 9073011L, 9073010L, 9073009L, 9073008L, 9073007L, 9073006L, 9073005L, 9073004L, 9073002L, 9073001L, 9045002L, 9045001L, 8007002L, 8007001L, 8006005L, 8006004L, 8006003L, 8006002L, 8006001L, 8004005L, 8004004L, 8004003L, 8004002L, 8004001L, 8003006L, 8003005L, 8003004L, 8003003L, 8003002L, 8003001L, 8002004L, 8002003L, 8002002L, 8002001L, 8001008L, 8001007L, 8001006L, 8001005L, 8001004L, 8001003L, 8001002L, 8001001L, 3001020L, 3001019L, 3001018L, 3001017L, 3001016L, 3001015L, 3001014L, 3001013L, 3001012L, 3001011L, 3001010L, 3001009L, 3001008L, 3001007L, 3001006L, 3001005L, 3001004L, 3001003L, 3001002L, 3001001L, 2099015L, 2099014L, 2099013L, 2099012L, 2099011L, 2099010L, 2099009L, 2099008L, 2099007L, 2099006L, 2099005L, 2099004L, 2099003L, 2099002L, 2099001L, 2088004L, 2088003L, 2088002L, 2088001L, 2024008L, 2024007L, 2024006L, 2024005L, 2024004L, 2024003L, 2024002L, 2024001L, 2023058L, 2023057L, 2023056L, 2023055L, 2023054L, 2023053L, 2023052L, 2023051L, 2023050L, 2023049L, 2023048L, 2023047L, 2023046L, 2023045L, 2023044L, 2023043L, 2023042L, 2023041L, 2023040L, 2023039L, 2023038L, 2023037L, 2023036L, 2023035L, 2023034L, 2023033L, 2023032L, 2023031L, 2023030L, 2023029L, 2023028L, 2023027L, 2023026L, 2023025L, 2023024L, 2023023L, 2023022L, 2023021L, 2023020L, 2023019L, 2023018L, 2023017L, 2023016L, 2023015L, 2023014L, 2023013L, 2023012L, 2023011L, 2023010L, 2023009L, 2023008L, 2023007L, 2023006L, 2023005L, 2023004L, 2023003L, 2023002L, 2023001L, 2022005L, 2022004L, 2022003L, 2022002L, 2022001L, 2021003L, 2021002L, 2021001L, 2020001L, 2019002L, 2019001L, 2018006L, 2018005L, 2018004L, 2018003L, 2018002L, 2018001L, 2017002L, 2017001L, 2016004L, 2016003L, 2016002L, 2016001L, 2015002L, 2015001L, 2014013L, 2014012L, 2014011L, 2014010L, 2014009L, 2014008L, 2014007L, 2014006L, 2014005L, 2014004L, 2014003L, 2014002L, 2014001L, 1781002L, 1781001L, 1116002L, 1116001L, 1115004L, 1115003L, 1115002L, 1115001L, 1113004L, 1113003L, 1113002L, 1113001L, 1112008L, 1112007L, 1112006L, 1112005L, 1112004L, 1112003L, 1112002L, 1112001L, 1111003L, 1111002L, 1111001L, 1110003L, 1110002L, 1110001L, 1058003L, 1058002L, 1058001L, 1057002L, 1057001L, 1056003L, 1056002L, 1056001L, 1055002L, 1055001L, 1054002L, 1054001L, 1053004L, 1053003L, 1053002L, 1053001L, 1052002L, 1052001L, 1051003L, 1051002L, 1051002L, 1051001L, 1051001L, 1050002L, 1050001L, 1049002L, 1049001L, 1048003L, 1048002L, 1048001L, 1047003L, 1047002L, 1047001L, 1046002L, 1046001L, 990L, 781L, 771L, 765L, 761L, 748L, 747L, 746L, 745L, 744L, 743L, 742L, 741L, 740L, 739L, 738L, 737L, 736L, 735L, 734L, 733L, 732L, 731L, 730L, 729L, 728L, 727L, 726L, 725L, 724L, 723L, 722L, 721L, 711L, 650L, 646L, 645L, 644L, 643L, 642L, 641L, 640L, 639L, 638L, 637L, 636L, 635L, 634L, 633L, 631L, 621L, 620L, 612L, 611L, 558L, 557L, 556L, 555L, 554L, 553L, 552L, 551L, 518L, 517L, 516L, 515L, 513L, 512L, 511L, 423L, 421L, 420L, 419L, 418L, 417L, 416L, 415L, 414L, 413L, 412L, 411L, 391L, 363L, 361L, 359L, 357L, 355L, 353L, 351L, 349L, 347L, 345L, 343L, 341L, 339L, 337L, 335L, 333L, 331L, 329L, 327L, 325L, 323L, 321L, 319L, 317L, 315L, 313L, 311L, 291L, 233L, 231L, 229L, 227L, 225L, 223L, 221L, 219L, 217L, 215L, 213L, 211L, 191L, 163L, 161L, 159L, 157L, 155L, 153L, 151L, 133L, 131L, 127L, 125L, 123L, 121L, 117L, 116L, 115L, 114L, 113L, 112L, 111L);

        List<TableEntity> list = dbComponent.getTable();
        for (TableEntity tableEntity : list) {
            dbComponent.setTableColumn(tableEntity);
            List<String> col = new ArrayList<>();
            for (ColumnEntity columnEntity : tableEntity.getColumns()) {
                if (columnEntity.getDbType() == null) {
                    System.out.println("错误列 " + tableEntity.getTableName() + ":" + columnEntity.getColumnName());
                }
                if (!"id".equals(columnEntity.getColumnName()) && columnEntity.getDbType() != null && (columnEntity.getDbType().equals("int4") || columnEntity.getDbType().equals("int8"))) {
                    col.add(columnEntity.getColumnName());
                }
            }
            if (tableEntity.getTableName().equals("appeal_source")) {
                System.out.println();
            }
            if (col.size() > 0) {
                StringBuilder str = new StringBuilder();
                Map<String, Boolean> b = new HashMap<>();
                col.forEach((j) -> b.put(j, true));
                for (String co : col) {
                    String sql = "select " + co + " from  " + db + "." + tableEntity.getTableName() + " where " + co + " is not null order by " + co + " desc limit 5 offset 0";
                    List<Map<String, Object>> mapList = new ArrayList<>();
                    try {
                        mapList = dbComponent.readJdbcData(sql);
                    } catch (Exception e) {
                        System.out.println("错误：" + sql);
                    }
                    if (mapList.size() <= 0) {
                        b.put(co, false);
                    }
                    for (Map<String, Object> m : mapList) {
                        m.forEach((k, v) -> {
                            if (v != null) {
                                if (!dis.contains(Long.parseLong(v.toString()))) {
                                    b.put(k, false);
                                }
                            }
                        });
                    }
                }
                b.forEach((k, v) -> {
                    if (v) {
                        str.append(k + ",");
                    }
                });
//                System.out.println(sql);
                if (str.length() > 2) {
                    System.out.println("异常字段：------------->" + tableEntity.getTableName() + "    -       " + str.toString());
                }
            }
        }
        dbComponent.close();
    }

    private static void getDb() {
        System.out.println("获取db");
    }

    private static void getTable() {
        System.out.println("读取所有table");
    }

    private static void getDict() {
        //90170005 1000000 9999999
        System.out.println("获取表中得数据字典列");
        //获取十行数据 判断是否是数据字典


    }

}
